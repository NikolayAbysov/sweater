package com.example.sweater.controller;

import com.example.sweater.domain.Message;
import com.example.sweater.domain.User;
import com.example.sweater.repository.MessageRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;
import java.util.Map;

@Controller
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MessageRepository messageRepository;

    @GetMapping("/")
    public String greeting( Map<String, Object> model) { //@RequestParam в длинной форме получает параметры ГЕТ запроса
        return "greeting";
    }

    @GetMapping("/main")
    public String main(@RequestParam(required = false, defaultValue = "") String filter , Model model){
        Iterable<Message> messages = messageRepository.findAll();

        if (filter != null && !filter.isEmpty()){
            messages = messageRepository.findByTag(filter);
        } else {
            messages = messageRepository.findAll();
        }
        model.addAttribute("messages", messages);
        model.addAttribute("filter", filter);
        return "main";
    }

    @PostMapping("/main")
    public String add (@AuthenticationPrincipal User user,
                       @RequestParam String text,
                       @RequestParam String tag,
                       Map<String, Object> model){ //@RequestParam( в короткой форме получает параметры из названий формы ПОСТ запроса
        Message message = new Message(text, tag, user); //Здесь сохраняем данные в БД
        messageRepository.save(message);

        Iterable<Message> messages = messageRepository.findAll(); //Достаем из БД
        model.put("messages", messages);
        return "main";
    }

/*    @PostMapping ("filter") //<form method="post" action="filter">
    public String filter (@RequestParam String filter, Map<String, Object> model){
        Iterable<Message> messages;
        if (filter != null && !filter.isEmpty()){
            messages = messageRepository.findByTag(filter);
        } else {
            messages = messageRepository.findAll();
        }
        model.put("messages", messages);
        return "main";
    }*/

}
